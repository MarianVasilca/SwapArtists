plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id("com.apollographql.apollo3").version("3.0.0")
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk rootProject.compile_sdk_version

    defaultConfig {
        applicationId "app.swapartists"
        minSdk rootProject.min_sdk_version
        targetSdk rootProject.target_sdk_version
        versionCode getVersionCode()
        versionName getVersionName()

        buildConfigField "String", "SERVER_URL", "\"https://graphbrainz.herokuapp.com/\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // dependencies are defined in ext arrays in app/build.gradle
    implementation libraries
    kapt librariesKapt

    testImplementation testLibraries
    androidTestImplementation androidTestLibraries
}

static def getVersionCode() {
    // Get CI/CD server environment variable for version code
    def buildNumber = System.getenv('BUILD_NUMBER')

    if (buildNumber != null && buildNumber.isNumber()) {
        return buildNumber.toInteger()
    }
    return 1
}

static def getVersionName() {
    def majorNumber = 0
    def minorNumber = 0
    return majorNumber + "." + minorNumber + "." + getVersionCode()
}

apollo {
    packageName.set("app.swapartists")
}